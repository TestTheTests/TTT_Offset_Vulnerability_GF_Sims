colfunc<-colorRampPalette(c("orange","cyan"))
colour <- matrix(colfunc(10)) #start a matrix object to fill out
grad <- 0.9 #set a starting gradient value
#Loop through colours adjusting the green level each time
for(i in 1:9){
colour <- cbind(colour,adjustcolor(colour[,i],green.f=grad+0.01))
}
colour
colfunc(9)
#Plot a 10 by 10 matrix using the colour gradient we've created
ggplot()+
geom_point(aes(x=rep(1:10,each=10),y=rep(1:10,10)),colour=c(colour), size=10)+
theme_classic()+
theme_void()
cg_sum<-read.table(paste("results/SLiM_output/CG_files/",seed,"_ML_WF_CG_sum_Gen.txt",sep=""),header=T)
##########################################
# Create a bicolor meta-population matrix
##########################################
require(ggplot2)
require(cowplot)
#Get an initial gradient of orange to cyan
colfunc<-colorRampPalette(c("orange","cyan"))
colour <- matrix(colfunc(10)) #start a matrix object to fill out
grad <- 0.9 #set a starting gradient value
#Loop through colours adjusting the green level each time
for(i in 1:9){
colour <- cbind(colour,adjustcolor(colour[,i],green.f=grad+0.01))
}
#Plot a 10 by 10 matrix using the colour gradient we've created
ggplot()+
geom_point(aes(x=rep(1:10,each=10),y=rep(1:10,10)),colour=c(colour), size=10)+
theme_classic()+
theme_void()
##seed values from sims
#seed = 5003617403563 #ML cline
#seed = 1594110774619 #ML mountain
#seed = 4438659167382 #Case 3
seed = 6698486070847 #Case4
#Read in summary file for simulation specs.
fit<-read.table(paste("results/SLiM_output/Sim_sum/",seed,"_Freq_ML_WF.txt",sep=""), header=T)
N<-data.frame(fit$n[1]*100) #total metapop size for equal deme size sims
colnames(N)<-"N" #name for specs file
(specs<-data.frame(seed,fit[1,1:2],N,fit[1,3:12])) #create a specs object for plot title
#Plot title has an extra spot at end so that var_Opt2 can be included when Case 4 results are run
plotTitle <- paste(colnames(specs)[1],":",specs[[1]],", ", colnames(specs)[2],":",specs[2],", ",colnames(specs)[3],":",specs[3],", ",colnames(specs)[4],":",specs[4],",",colnames(specs)[5],":",specs[5],"\n",colnames(specs)[6],":",specs[6],", ",colnames(specs)[7],":",specs[7],", ",colnames(specs)[8],":",specs[8],", ",colnames(specs)[9],":",specs[9],", ",colnames(specs)[10],":",specs[10],sep="")
cg_sum<-read.table(paste("results/SLiM_output/CG_files/",seed,"_ML_WF_CG_sum_Gen.txt",sep=""),header=T)
ggplot(data=cg_sum)+
#geom_line(aes(y=sympatry, x=generation), col="green")+
#geom_line(aes(y=allopatry, x=generation), col="orange")+
geom_line(aes(y=local_adaptation, x=generation), col="cyan", lwd=2)+
geom_vline(xintercept = 1000, linetype='dotted')+
geom_vline(xintercept = 2000, linetype='dotdash')+
geom_vline(xintercept = 3000, linetype='dashed')+
xlab("Generations")+
ylab("Local Adaptation")+
annotate("text", y=-0.01, x=500, label= "Burnin", size=2.75)+
annotate("text", y=-0.01, x=1500, label= "Env.\nTrans.", size=2.75)+
annotate("text", y=-0.01, x=2200, label= "Adaptation", size=2.75)+
annotate("text", y=-0.01, x=3200, label= "Climate\nChange", size=2.75)+
ggtitle(paste(plotTitle)) +
theme_classic()
ggplot(data=cg_sum)+
#geom_line(aes(y=sympatry, x=generation), col="green")+
#geom_line(aes(y=allopatry, x=generation), col="orange")+
geom_line(aes(y=corr_pheno0_opt0, x=generation), col="orange", lwd=2)+
geom_line(aes(y=corr_pheno1_opt1, x=generation), col="cyan", lwd=2)+
geom_vline(xintercept = 1000, linetype='dotted')+
geom_vline(xintercept = 2000, linetype='dotdash')+
geom_vline(xintercept = 3000, linetype='dashed')+
ylim(-1,1)+
xlab("Generations")+
ylab("Correlation of phenotypes to optima")+
annotate("text", y=-1, x=500, label= "Burnin", size=2.75)+
annotate("text", y=-1, x=1500, label= "Env.\nTrans.", size=2.75)+
annotate("text", y=-1, x=2200, label= "Adaptation", size=2.75)+
annotate("text", y=-1, x=3200, label= "Climate\nChange", size=2.75)+
ggtitle(paste(plotTitle)) +
theme_classic()
#Read in individual phenotypes, optima, and fitness from simulations
ind<-read.table(paste("results/SLiM_output/",seed,"_ind.txt",sep=""),sep = " ", header=T)
#Set Env1 and Env2 colors
env1_col <- "orange"
env2_col <- "cyan"
#Save Env 1 plot
A <- ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0),col=env1_col)+
geom_smooth(aes(x=opt0, y=phen0), method="lm",se = T)+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
xlim(-1,1)+
theme_classic()
#Save Env 2 plot
B <- ggplot(data=ind)+
geom_point(aes(x=opt1, y=phen1),col=env2_col)+
geom_smooth(aes(x=opt1, y=phen1), method="lm",se = T)+
xlab("Environment 2")+
ylab("Phenotype 2")+
ylim(-3,3)+
xlim(-1,1)+
theme_classic()
#Create title
title<- ggdraw() + draw_label(plotTitle, fontface='bold')
#Plot Env1 and Env2 side-by-side
plot_grid(title,NULL,A,B,nrow=2,ncol=2,rel_heights = c(1,3))
#Total correlation
cor(ind$phen0,ind$opt0)
cor(ind$phen1,ind$opt1)
#Total variance
var(ind$phen0)
var(ind$phen1)
#Per env1 value variance
for(i in unique(ind$opt0)){
print(var(ind[ind$opt0==i,]$phen0))
}
#Per env2 value variance
for(i in unique(ind$opt1)){
print(var(ind[ind$opt1==i,]$phen1))
}
#Standardized environments
ind_stan <- ind #save copy of original dataset to modify
#standardize each x in env by (x-mean(x))/sd(x)
ind_stan$opt0 <- (ind_stan$opt0-mean(ind_stan$opt0))/sd(ind_stan$opt0)
ind_stan$opt1 <- (ind_stan$opt1-mean(ind_stan$opt1))/sd(ind_stan$opt1)
#Save std. Env 1 plot
As <- ggplot(data=ind_stan)+
geom_point(aes(x=opt0, y=phen0),col=env1_col)+
geom_smooth(aes(x=opt0, y=phen0), method="lm",se = T)+
xlab("Environment 1 (Std.)")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
#Save std. Env 2 plot
Bs <- ggplot(data=ind_stan)+
geom_point(aes(x=opt1, y=phen1),col=env2_col)+
geom_smooth(aes(x=opt1, y=phen1), method="lm",se = T)+
xlab("Environment 2 (Std.)")+
ylab("Phenotype 2")+
ylim(-3,3)+
theme_classic()
#Create title
title<- ggdraw() + draw_label(plotTitle, fontface='bold')
#Plot std. Env1 and Env2 side-by-side
plot_grid(title,NULL,As,Bs,nrow=2,ncol=2,rel_heights = c(1,3))
#Total correlation
cor(ind_stan$phen0,ind_stan$opt0)
cor(ind_stan$phen1,ind_stan$opt1)
#Total variance
var(ind_stan$phen0)
var(ind_stan$phen1)
#Comp_size <- data.frame(Size, GF_Off)
colfunc<-colorRampPalette(c("orange"))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)
#Comp_size <- data.frame(Size, GF_Off)
colfunc<-colorRampPalette(c("orange","red"))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)
#Comp_size <- data.frame(Size, GF_Off)
colfunc<-colorRampPalette(c("orange","cyan"))
#Comp_size <- data.frame(Size, GF_Off)
rho_test<-cor.test(GF_Off$GF_Off,GF_Off$Size, method = "pearson")
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)-0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
#GF_Off <- data.frame(Rep="A", Comp=GFoff1$Comp, Size=Size, GF_Off=GFoff1$GF_Offset1)
#GF_Off <- rbind(GF_Off, data.frame(Rep="B", Comp=GFoff2$Comp, Size=Size, GF_Off=GFoff2$GF_Offset2))
#GF_Off <- rbind(GF_Off, data.frame(Rep="C", Comp=GFoff3$Comp, Size=Size, GF_Off=GFoff3$GF_Offset3))
options(scipen = 0)
#Comp_size <- data.frame(Size, GF_Off)
rho_test<-cor.test(GF_Off$GF_Off,GF_Off$Size, method = "pearson")
LH <-ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
LH <-ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
Summary_Pop1f$Pop_size[1:9]
GF_Off2 <- data.frame(Rep=Rep,Comp=rep(Comp,10),Size=rep(Size2,10),GF_Off=GF_Offset_Neu_flp)
rho_test<-cor.test(GF_Off$GF_Off,GF_Off$Size, method = "pearson")
HL <-ggplot(data=GF_Off2)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("")+
xlab(expression(paste("GF Offset")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
#theme(legend.position = "none")+
ggtitle("High to Low")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
ggplot(data=GF_Off2)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("")+
xlab(expression(paste("GF Offset")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
#theme(legend.position = "none")+
ggtitle("High to Low")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
rho_test<-cor.test(GF_Off2$GF_Off,GF_Off2$Size, method = "pearson")
HL <-ggplot(data=GF_Off2)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("")+
xlab(expression(paste("GF Offset")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
#theme(legend.position = "none")+
ggtitle("High to Low")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
plot_grid(LH,HL,ncol=2,rel_widths = c(1,1.25))
rho_test
rho_test$p.value
round(rho_test$p.value,28)
HL <-ggplot(data=GF_Off2)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("")+
xlab(expression(paste("GF Offset")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
#theme(legend.position = "none")+
ggtitle("High to Low")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,28), sep=""))
plot_grid(LH,HL,ncol=2,rel_widths = c(1,1.25))
ggplot() +
geom_line(aes(x=envPop$envSelect, y=gfTrans1$C.Imp_genome_before), colour=rgb(0,0,0,0.4), lwd=1.5) +
labs(y="GF Cumulative Importance", x="Environment") +
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
ggtitle(plotTitle) +
theme(plot.title = element_text(size=14, face="bold.italic"))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=14, face="bold.italic"))+
theme(legend.text=element_text(size=14), legend.title = element_text(size=14))+
annotate("text", x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
?annotate
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=14, face="bold.italic"))+
theme(legend.text=element_text(size=14), legend.title = element_text(size=24))+
annotate("text", size=3, x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=24, face="bold.italic"))+
annotate("text", size=12, x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=24, face="bold.italic"))+
annotate("text", size=9, x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=24, face="bold.italic"))+
annotate("text", size=9, x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
#Comp_size <- data.frame(Size, GF_Off)
rho_test<-cor.test(GF_Off$GF_Off,GF_Off$Size, method = "pearson")
LH <-ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=24, face="bold.italic"))+
annotate("text", size=6, x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
ggplot(data=GF_Off)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("Deme size")+
xlab(expression(paste("\n")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
theme(legend.position = "none")+
ggtitle("Low to High")+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=24, face="bold.italic"))+
annotate("text", size=6, x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,7), sep=""))
rho_test<-cor.test(GF_Off2$GF_Off,GF_Off2$Size, method = "pearson")
ggplot(data=GF_Off2)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("")+
xlab(expression(paste("GF Offset")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
#theme(legend.position = "none")+
ggtitle("High to Low")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=24, face="bold.italic"))+
annotate("text", size=6, x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,28), sep=""))
HL <-ggplot(data=GF_Off2)+
geom_point(aes(x=GF_Off,y=Size,color=Comp),size=4)+
ylab("")+
xlab(expression(paste("GF Offset")))+
#scale_colour_gradientn(colours = colfunc(9))+
scale_colour_manual(values = colfunc(9))+
theme_classic(base_size = 16)+
ylim(10,200)+
xlim(0,0.04)+
#theme(legend.position = "none")+
ggtitle("High to Low")+
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())+
geom_smooth(aes(x=GF_Off,y=Size),method='lm',col="red",size=1,se=F)+
theme(axis.text.x = element_text(size = 18),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16),
axis.title.y = element_text(size=24, vjust=1)) +
theme(plot.title = element_text(size=24, face="bold.italic"))+
annotate("text", size=6, x = max(GF_Off$GF_Off)+0.005, y = max(GF_Off$Size)-50, label = paste("r = ",round(rho_test$estimate,3), "\np-value = ",round(rho_test$p.value,28), sep=""))
plot_grid(LH,HL,ncol=2,rel_widths = c(1,1.25))
plot_grid(LH,HL,nrow=2,rel_widths = c(1,1.25))
plot_grid(LH,HL,nrow=2,rel_widths = c(1,2))
plot_grid(LH,HL,ncol=2,nrow=2,rel_widths = c(1,2))
plot_grid(LH,NA,HL,NA,ncol=2,nrow=2,rel_widths = c(1,2))
plot_grid(LH,NULL,NULL,HL,ncol=2,nrow=2,rel_widths = c(1,1.25))
