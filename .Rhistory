labs(y="\n(Adaptive)", x="Environment 1") +
#geom_line(data=cImpMAF.neut, aes(x=x, y=y),
#          colour=rgb(0,0,1, 0.75), lwd=1) +
#geom_line(data=cImpMAF.sel, aes(x=x, y=y),
#          colour=rgb(1,0,0, 0.75), lwd=1) +
#geom_line(data=cImpMAF, aes(x=x, y=y),
#          colour=rgb(0,0,0, 0.75), lwd=1) +
ylim(-0.002,0.16)+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
#ggtitle("Lost > 5") +
#ggtitle(paste(plotTitle,", alleles under selection")) +
#scale_x_continuous(limits=c(-4,7))+
theme(plot.title = element_text(size=14, face="bold.italic"))
D <- ggplot() +
geom_line(aes(x=envTab[,2], y=gfTrans1_sel2$C.Imp_genome_before), colour=rgb(0,0,0,0.4), lwd=1.5) +
#facet_grid(. ~ strSel) +
ylab("\n(Adaptive)\n") +
xlab("Environment 2")+
#geom_line(data=cImpMAF.neut, aes(x=x, y=y),
#          colour=rgb(0,0,1, 0.75), lwd=1) +
#geom_line(data=cImpMAF.sel, aes(x=x, y=y),
#          colour=rgb(1,0,0, 0.75), lwd=1) +
#geom_line(data=cImpMAF, aes(x=x, y=y),
#          colour=rgb(0,0,0, 0.75), lwd=1) +
#theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
#ggtitle("Lost > 5") +
scale_y_continuous(position = "right", sec.axis = sec_axis(~., labels = NULL),limits = c(-0.002,0.16)) +
#ggtitle(plotTitle) +
#scale_x_continuous(limits=c(-4,7))+
theme(plot.title = element_text(size=14, face="bold.italic"))
title <- ggdraw() + draw_label(plotTitle, fontface='bold')
plot_grid(title,NULL,A,B,C,D,nrow=3,ncol=2,rel_heights = c(1,3,3))
## Visualize CI for individual alleles
cImp1sel <- cImp1[cImp1$allele%in%select_pos,]
A <- ggplot() +
geom_line(data=cImp1, aes(x=x , y=y, group=allele), color="grey", lwd=1.5) +
geom_line(data=cImp1sel, aes(x=x , y=y, group=allele),color="red",lwd=1.5) +
ylab("Cumulative Importance")+
xlab("Environment 1") +
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
ylim(0.0,0.6)
cImp2sel <- cImp2[cImp2$allele%in%select_pos,]
B <- ggplot() +
geom_line(data=cImp2, aes(x=x , y=y, group=allele), color="grey", lwd=1.5) +
geom_line(data=cImp2sel, aes(x=x , y=y, group=allele),color="red",lwd=1.5) +
ylab("Cumulative Importance")+
xlab("Environment 2") +
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
ylim(0.0,0.6)
title <- ggdraw() + draw_label(plotTitle, fontface='bold')
plot_grid(title,NULL,A,B,nrow=2,ncol=2,rel_heights = c(1,3))
#plot the allele frequencies of the ten alleles with the highest CI values
top_al1<-unique(cImp1[order(cImp1$y,decreasing = T),]$allele)[1:10]
length(unique(cImp1$allele))
alf1<-Pop_afreq1[,colnames(Pop_afreq1)%in%top_al1]
alf1$Env1 <- envPop1$envPop1
alf1b <- melt(alf1, id = "Env1", variable.name = "Allele")
alf1c <- alf1b %>%
group_by(Env1,Allele) %>%
summarise(average = mean(value))
A <-
ggplot() +
geom_line(data=alf1c, aes(x=Env1, y=average, linetype=Allele, color=Allele),lwd=1) +
ylab("Allele frequency (average)")+
xlab("Environment 1") +
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
#scale_color_discrete_qualitative(palette = "Pastel")+
#geom_text(aes(x=rep(-0.75,10),y= c(seq(0.5,0.3,length.out =10)), label =top_al1))+
#annotate("text",x = -1, y =0.5, label=paste(top_al1))+
ylim(0.0,1)
top_al2<-unique(cImp2[order(cImp2$y,decreasing = T),]$allele)[1:10]
length(unique(cImp2$allele))
alf2<-Pop_afreq1[,colnames(Pop_afreq1)%in%top_al2]
alf2$Env2 <- envPop2$envPop2
alf2b <- melt(alf2, id = "Env2", variable.name = "Allele")
alf2c <- alf2b %>%
group_by(Env2,Allele) %>%
summarise(average = mean(value))
B <- ggplot() +
geom_line(data=alf2c, aes(x=Env2, y=average, linetype=Allele, color=Allele),lwd=1) +
ylab("")+
xlab("Environment 2") +
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
# theme(axis.text.y = element_text(size = 16, colour = "grey60"),
#       axis.title.y = element_text(size=24, vjust=1)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16))+
ylim(0.0,1)+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
title <- ggdraw() + draw_label(plotTitle, fontface='bold')
plot_grid(title,NULL,A,B,nrow=2,ncol=2,rel_heights = c(1,3), rel_widths = c(1.1,1))
alf1s<-alFreq_sel
alf1s$Env1 <- envPop1$envPop1
alf1sb <- melt(alf1s, id = "Env1", variable.name = "Allele")
alf1sc <- alf1sb %>%
group_by(Env1,Allele) %>%
summarise(average = mean(value))
A <-
ggplot() +
geom_line(data=alf1sc, aes(x=Env1, y=average, color=Allele),lwd=1) +
ylab("Adapted allele frequency (average)")+
xlab("Environment 1") +
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
#scale_color_discrete_qualitative(palette = "Pastel")+
#geom_text(aes(x=rep(-0.75,10),y= c(seq(0.5,0.3,length.out =10)), label =top_al1))+
#annotate("text",x = -1, y =0.5, label=paste(top_al1))+
guides(color = FALSE) +
ylim(0.0,1)
alf2s<-alFreq_sel
alf2s$Env2 <- envPop2$envPop2
alf2sb <- melt(alf2s, id = "Env2", variable.name = "Allele")
alf2sc <- alf2sb %>%
group_by(Env2,Allele) %>%
summarise(average = mean(value))
B <- ggplot() +
geom_line(data=alf2sc, aes(x=Env2, y=average, color=Allele),lwd=1) +
ylab("")+
xlab("Environment 2") +
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16))+
guides(color = FALSE) +
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())+
ylim(0.0,1)
title <- ggdraw() + draw_label(plotTitle, fontface='bold')
plot_grid(title,NULL,A,B,nrow=2,ncol=2,rel_heights = c(1,3), rel_widths = c(1.1,1))
cg_sum<-read.table(paste("results/SLiM_output/CG_files/",seed,"_ML_WF_CG_sum_Gen.txt",sep=""),header=T)
ggplot(data=cg_sum)+
#geom_line(aes(y=sympatry, x=generation), col="green")+
#geom_line(aes(y=allopatry, x=generation), col="orange")+
geom_line(aes(y=local_adaptation, x=generation), col="cyan", lwd=2)+
geom_vline(xintercept = 1000, linetype='dotted')+
geom_vline(xintercept = 2000, linetype='dotdash')+
geom_vline(xintercept = 3000, linetype='dashed')+
xlab("Generations")+
ylab("Local Adaptation")+
annotate("text", y=-0.01, x=500, label= "Burnin", size=2.75)+
annotate("text", y=-0.01, x=1500, label= "Env.\nTrans.", size=2.75)+
annotate("text", y=-0.01, x=2200, label= "Adaptation", size=2.75)+
annotate("text", y=-0.01, x=3200, label= "Climate\nChange", size=2.75)+
ggtitle(paste(plotTitle)) +
theme_classic()
ggplot(data=cg_sum)+
#geom_line(aes(y=sympatry, x=generation), col="green")+
#geom_line(aes(y=allopatry, x=generation), col="orange")+
geom_line(aes(y=corr_pheno0_opt0, x=generation), col="orange", lwd=2)+
geom_line(aes(y=corr_pheno1_opt1, x=generation), col="cyan", lwd=2)+
geom_vline(xintercept = 1000, linetype='dotted')+
geom_vline(xintercept = 2000, linetype='dotdash')+
geom_vline(xintercept = 3000, linetype='dashed')+
ylim(-1,1)+
xlab("Generations")+
ylab("Correlation of phenotypes to optima")+
annotate("text", y=-1, x=500, label= "Burnin", size=2.75)+
annotate("text", y=-1, x=1500, label= "Env.\nTrans.", size=2.75)+
annotate("text", y=-1, x=2200, label= "Adaptation", size=2.75)+
annotate("text", y=-1, x=3200, label= "Climate\nChange", size=2.75)+
ggtitle(paste(plotTitle)) +
theme_classic()
ind<-read.table(paste("results/SLiM_output/",seed,"_ind.txt",sep=""),sep = " ", header=F)
View(ind)
ind<-read.table(paste("results/SLiM_output/",seed,"_ind.txt",sep=""),sep = " ", header=T)
View(ind)
View(ind)
cor(ind$phen0,ind$opt0)
cor(ind$phen1,ind$opt1)
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
theme_classic()
ggplot(data=ind)+
geom_point(aes(x=opt1, y=phen1))+
theme_classic()
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
ylim(-3,3)+
theme_classic()
ggplot(data=ind)+
geom_point(aes(x=opt1, y=phen1))+
ylim(-3,3)+
theme_classic()
var(ind$phen0,ind$opt0)
var(ind$phen1,ind$opt1)
var(ind$phen0)
var(ind$phen1)
var(ind[ind$opt0==-1,]$phen0)
var(ind[ind$opt1==-1,]$phen1)
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
ylim(-3,3)+
ggtitle(paste(plotTitle)) +
theme_classic()
A <- ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
B <- ggplot(data=ind)+
geom_point(aes(x=opt1, y=phen1))+
xlab("Environment 2")+
ylab("Phenotype 2")+
ylim(-3,3)+
theme_classic()
plot_grid(title,NULL,A,B,nrow=2,ncol=2,rel_heights = c(1,3))
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
geom_smooth()+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
geom_smooth(inherit.aes = T)+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
geom_smooth(formula = pheno~opt0)+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
geom_smooth(aes(x=opt0, y=phen0), method="lm",se = F)+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
geom_smooth(aes(x=opt0, y=phen0), method="lm",se = T)+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
geom_smooth(aes(x=opt0, y=phen0), method="gam",se = T)+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
A <- ggplot(data=ind)+
geom_point(aes(x=opt0, y=phen0))+
geom_smooth(aes(x=opt0, y=phen0), method="lm",se = T)+
xlab("Environment 1")+
ylab("Phenotype 1")+
ylim(-3,3)+
theme_classic()
B <- ggplot(data=ind)+
geom_point(aes(x=opt1, y=phen1))+
geom_smooth(aes(x=opt0, y=phen0), method="lm",se = T)+
xlab("Environment 2")+
ylab("Phenotype 2")+
ylim(-3,3)+
theme_classic()
title<- ggdraw() + draw_label(plotTitle, fontface='bold')
plot_grid(title,NULL,A,B,nrow=2,ncol=2,rel_heights = c(1,3))
cor(ind$phen0,ind$opt0)
cor(ind$phen1,ind$opt1)
var(ind$phen0)
var(ind$phen1)
var(ind[ind$opt0==-1,]$phen0)
var(ind[ind$opt1==-1,]$phen1)
unique(ind$opt0)
var(ind[ind$opt0==unique(ind$opt0),]$phen0)
for(i in unique(ind$opt0)){
print(var(ind[ind$opt0==i,]$phen0))
}
for(i in unique(ind$opt1)){
print(var(ind[ind$opt1==-1,]$phen1))
}
for(i in unique(ind$opt1)){
print(var(ind[ind$opt1==i,]$phen1))
}
for(i in unique(ind$opt0)){
print(var(ind[ind$opt0==i,]$phen0))
}
for(i in unique(ind$opt1)){
print(var(ind[ind$opt1==i,]$phen1))
}
unique(ind$opt0)
unique(ind$opt1)
#GF visualization per environment
A <- ggplot() +
geom_line(aes(x=envTab[,1], y=gfTrans1e1$C.Imp_genome_before), colour=rgb(0,0,0,0.4), lwd=1.5) +
#facet_grid(. ~ strSel) +
ylab("Cumulative Importance\n(Genome)")+
xlab("") +
#theme(axis.title.y = element_text(margin = margin(t = 50, r = 0, b = 0, l = 50)))+
#labs(y="Cumulative Importance\n(Genome)", x="Environment 1") +
#geom_line(data=cImpMAF.neut, aes(x=x, y=y),
#          colour=rgb(0,0,1, 0.75), lwd=1) +
#geom_line(data=cImpMAF.sel, aes(x=x, y=y),
#          colour=rgb(1,0,0, 0.75), lwd=1) +
#geom_line(data=cImpMAF, aes(x=x, y=y),
#          colour=rgb(0,0,0, 0.75), lwd=1) +
ylim(-0.002,0.16)+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
#ggtitle(plotTitle) +
#ggtitle(paste(plotTitle,", all alleles")) +
#scale_x_continuous(limits=c(-4,7))+
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
B <- ggplot() +
geom_line(aes(x=envTab[,2], y=gfTrans1e2$C.Imp_genome_before), colour=rgb(0,0,0,0.4), lwd=1.5) +
#facet_grid(. ~ strSel) +
labs(y="Cumulative Importance\n(Genome)\n", x="") +
#labs(y="Cumulative Importance\n(Genome)", x="Environment 2") +
#geom_line(data=cImpMAF.neut, aes(x=x, y=y),
#          colour=rgb(0,0,1, 0.75), lwd=1) +
#geom_line(data=cImpMAF.sel, aes(x=x, y=y),
#          colour=rgb(1,0,0, 0.75), lwd=1) +
#geom_line(data=cImpMAF, aes(x=x, y=y),
#          colour=rgb(0,0,0, 0.75), lwd=1) +
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
#ggtitle("Lost > 5") +
#ggtitle(plotTitle) +
scale_y_continuous(position = "right", sec.axis = sec_axis(~., labels = NULL),limits = c(-0.002,0.16)) +
theme(plot.title = element_text(size=14, face="bold.italic"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
#GF visualization per environment with the just alleles under selection
C <- ggplot() +
geom_line(aes(x=envTab[,1], y=gfTrans1_sel1$C.Imp_genome_before), colour=rgb(0,0,0,0.4), lwd=1.5) +
#facet_grid(. ~ strSel) +
labs(y="\n(Causal)", x="Environment 1") +
#geom_line(data=cImpMAF.neut, aes(x=x, y=y),
#          colour=rgb(0,0,1, 0.75), lwd=1) +
#geom_line(data=cImpMAF.sel, aes(x=x, y=y),
#          colour=rgb(1,0,0, 0.75), lwd=1) +
#geom_line(data=cImpMAF, aes(x=x, y=y),
#          colour=rgb(0,0,0, 0.75), lwd=1) +
ylim(-0.002,0.16)+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
#ggtitle("Lost > 5") +
#ggtitle(paste(plotTitle,", alleles under selection")) +
#scale_x_continuous(limits=c(-4,7))+
theme(plot.title = element_text(size=14, face="bold.italic"))
D <- ggplot() +
geom_line(aes(x=envTab[,2], y=gfTrans1_sel2$C.Imp_genome_before), colour=rgb(0,0,0,0.4), lwd=1.5) +
#facet_grid(. ~ strSel) +
ylab("\n(Causal)\n") +
xlab("Environment 2")+
#geom_line(data=cImpMAF.neut, aes(x=x, y=y),
#          colour=rgb(0,0,1, 0.75), lwd=1) +
#geom_line(data=cImpMAF.sel, aes(x=x, y=y),
#          colour=rgb(1,0,0, 0.75), lwd=1) +
#geom_line(data=cImpMAF, aes(x=x, y=y),
#          colour=rgb(0,0,0, 0.75), lwd=1) +
#theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "in")) +
theme_bw() +
theme(axis.text.x = element_text(size = 18, colour = "grey60"),
axis.title.x = element_text(size=24)) +
theme(axis.text.y = element_text(size = 16, colour = "grey60"),
axis.title.y = element_text(size=24, vjust=1)) +
theme(strip.text = element_text(size=16)) +
#ggtitle("Lost > 5") +
scale_y_continuous(position = "right", sec.axis = sec_axis(~., labels = NULL),limits = c(-0.002,0.16)) +
#ggtitle(plotTitle) +
#scale_x_continuous(limits=c(-4,7))+
theme(plot.title = element_text(size=14, face="bold.italic"))
title <- ggdraw() + draw_label(plotTitle, fontface='bold')
plot_grid(title,NULL,A,B,C,D,nrow=3,ncol=2,rel_heights = c(1,3,3))
cg<-read.table(paste("results/SLiM_output/CG_files/",seed,"_fitnessmat_pop.txt",sep=""),header=F)
colnames(cg)<-rep(paste("H",seq(1:100),sep=""))
cg$Transplant<-paste("T",seq(1:100),sep="")
cg_df <- melt(cg,  id.vars ="Transplant",  variable.name = "Home",
value.name = "Fitness")
cg_df$Transplant<-factor(cg_df$Transplant,levels=unique(cg_df$Transplant))
CI_bf1 <- gfTrans1e1$C.Imp_genome_before
CI_bf2 <- gfTrans1e2$C.Imp_genome_before
GF_dist_bef<-data.frame(cbind(gfTrans1e1,gfTrans1e2))
colnames(GF_dist_bef)<-c("CI_env1", "CI_env2")
ggplot() +
geom_line(aes(x=1:100, y=GF_dist_bef$CI_env1) ,col="orange", lty=2,size=1.5)+
geom_line(aes(x=1:100, y=GF_dist_bef$CI_env2) ,col="cyan", lty=2,size=1.5)+
xlab("Location")+
ylab("Cumulative Importance")
CI<-NULL
for(i in 1:nrow(GF_dist_bef)){
for(j in 1:nrow(GF_dist_bef)){
CI<-c(CI,dist(rbind(GF_dist_bef[i,],GF_dist_bef[j,])))
#CI<-c(CI,CI_bf[j]-CI_bf[i])
}
}
cg_df$D_CI<-CI
GFsel_dist_bef<-data.frame(cbind(gfTrans1_sel1,gfTrans1_sel2))
colnames(GFsel_dist_bef)<-c("CI_env1", "CI_env2")
CI_sel<-NULL
for(i in 1:nrow(GFsel_dist_bef)){
for(j in 1:nrow(GFsel_dist_bef)){
CI_sel<-c(CI_sel,dist(rbind(GFsel_dist_bef[i,],GFsel_dist_bef[j,])))
#CI<-c(CI,CI_bf[j]-CI_bf[i])
}
}
cg_df$D_CI_sel<-CI_sel
cg_df$FST<-as.vector(Pre_FST)
cg_df$FST_sel<-as.vector(Pre_FST_sel)
Env_dist<-data.frame(cbind(envPop1,envPop2))
colnames(Env_dist)<-c("Env1", "Env2")
DI<-NULL
for(i in 1:nrow(Env_dist)){
for(j in 1:nrow(Env_dist)){
DI<-c(DI,dist(rbind(Env_dist[i,],Env_dist[j,])))
#CI<-c(CI,CI_bf[j]-CI_bf[i])
}
}
cg_df$DI<-DI
demes <-unique(cg_df$Transplant)
demes <-unique(cg_df$Transplant)
CI_plots <- vector('list', length(demes))
max(cg_df[!is.na(cg_df$D_CI),]$D_CI)
min(cg_df[!is.na(cg_df$D_CI),]$D_CI)
i
dat_filt<-cg_df[cg_df$Transplant%in%demes[i],]
dat_sum<-cor.test(x=dat_filt$D_CI, y=dat_filt$Fitness, method = "pearson")
CI_plots[[i]] <- local({
i <- i
p1 <- ggplot(data=dat_filt)+
geom_smooth(aes(x=D_CI, y=Fitness), method="lm",se = F)+
annotate("text",x=0.025,y=0.9,label=paste("r = ",round(dat_sum$estimate[[1]],3),"\np-value = ", signif(dat_sum$p.value,3),sep=""))+
geom_point(aes(x=D_CI, y=Fitness, col=Home), size=3)+
labs(shape="Home", colour="Common\nGarden\nLocation")+
scale_color_manual(values = colfunc(100), guide=F)+
# ylab("Average relative fitness in common garden")+
# xlab("GF Offset (genome)")+
ylab("")+
xlab("")+
ylim(0,1)+
xlim(0,0.09)+
ggtitle(paste("Transplant to",str_sub(demes[i],2,4)))+
theme_classic()+
theme(axis.text=element_text(size=12),axis.title=element_text(size=14)
)
print(p1)
})
#save.image("~/Desktop/PostDoc/SLiMstuff/SLiM_output/250K/VCF_output/300K/1727520158823.RData")
save.image(paste("results/R_results/",seed,".RData",sep=""))
