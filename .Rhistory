env <- -4.5:8.5
#Alt
# get_fitness_from_env_m2 <- function(env, s){
#   fitness <- c()
#   fitness <-  1 + s*env
#   return(fitness)
# }
get_fitness_from_env_m2(env, 0.1)
# In this case I am considering a type of thermal performance curve
# approximated with two linear functions
env <- -4.5:8.5
plot(env, get_fitness_from_env_m2(env, 0.1),xlim=c(-4.5,8.5), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
#lines(env,get_fitness_from_env_m2_2(env,0.8), col="red")
abline(h=1)
env <- seq(-1,2,0.1)
plot(env, get_fitness_from_env_m2_b(env, 0.4),xlim=c(-1,2), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
#lines(env,get_fitness_from_env_m2_2(env,0.8), col="red")
abline(h=1)
plot(env, get_fitness_from_env_m2_b(env, 0.45),xlim=c(-1,2), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
get_fitness_from_env_m2_b <- function(env, s){
fitness <- c()
fitness[env<1] <-  1 + s*env[env<1]
fitness[env>=1] <- 1 +s + -1.5*s*(env[env>=1]-1)
return(fitness)
}
# In this case I am considering a type of thermal performance curve
# approximated with two linear functions
env <- -4.5:8.5
plot(env, get_fitness_from_env_m2(env, 0.1),xlim=c(-4.5,8.5), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
#lines(env,get_fitness_from_env_m2_2(env,0.8), col="red")
abline(h=1)
env <- seq(-1,2,0.1)
plot(env, get_fitness_from_env_m2_b(env, 0.45),xlim=c(-1,2), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
#lines(env,get_fitness_from_env_m2_2(env,0.8), col="red")
abline(h=1)
# for now don't worry about the math,
# just look at the plot after the function
get_fitness_from_env_m2 <- function(env, s){
fitness <- c()
fitness[env<5] <-  1 + s*env[env<5]
fitness[env>=5] <- 1 + s*4 + -3*s*(env[env>=5]-5)
return(fitness)
}
get_fitness_from_env_m2_b <- function(env, s){
fitness <- c()
fitness[env<1] <-  1 + s*env[env<1]
fitness[env>=1] <- 1 +s + -3*s*(env[env>=1]-1)
return(fitness)
}
get_fitness_from_env_m2_2 <- function(env, s){
fitness <- c()
fitness <-  1 - s*env
return(fitness)
}
# for now don't worry about the math,
# just look at the plot after the function
get_fitness_from_env_m2 <- function(env, s){
fitness <- c()
fitness[env<5] <-  1 + s*env[env<5]
fitness[env>=5] <- 1 + s*4 + -3*s*(env[env>=5]-5)
return(fitness)
}
get_fitness_from_env_m2_b <- function(env, s){
fitness <- c()
fitness[env<1] <-  1 + s*env[env<1]
fitness[env>=1] <- 1 +s + -3*s*(env[env>=1]-1)
return(fitness)
}
# In this case I am considering a type of thermal performance curve
# approximated with two linear functions
env <- -4.5:8.5
plot(env, get_fitness_from_env_m2(env, 0.1),xlim=c(-4.5,8.5), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
#lines(env,get_fitness_from_env_m2_2(env,0.8), col="red")
abline(h=1)
env <- seq(-1,2,0.1)
plot(env, get_fitness_from_env_m2_b(env, 0.45),xlim=c(-1,2), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
#lines(env,get_fitness_from_env_m2_2(env,0.8), col="red")
abline(h=1)
plot(env, get_fitness_from_env_m2_b(env, 0.45),xlim=c(-1,2.5), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
get_fitness_from_env_m2(env, 0.1)
get_fitness_from_env_m2_b(env, 0.45)
# In this case I am considering a type of thermal performance curve
# approximated with two linear functions
env <- -4.5:8.5
#Alt
# get_fitness_from_env_m2 <- function(env, s){
#   fitness <- c()
#   fitness <-  1 + s*env
#   return(fitness)
# }
get_fitness_from_env_m2(env, 0.1)
# In this case I am considering a type of thermal performance curve
# approximated with two linear functions
env <- -4.5:8.5
get_fitness_from_env_m2(env, 0.1)
env <- seq(-1,2,0.1)
get_fitness_from_env_m2_b(env, 0.45)
env <- seq(-1,2,0.2)
get_fitness_from_env_m2_b(env, 0.45)
env <- seq(-1,2,0.3)
get_fitness_from_env_m2_b(env, 0.45)
# In this case I am considering a type of thermal performance curve
# approximated with two linear functions
env <- -4.5:8.5
get_fitness_from_env_m2(env, 0.1)
env <- seq(-1,2,0.3)
get_fitness_from_env_m2_b(env, 0.45)
env
# In this case I am considering a type of thermal performance curve
# approximated with two linear functions
env <- -4.5:8.5
# In this case I am considering a type of thermal performance curve
# approximated with two linear functions
env <- -4.5:8.5
get_fitness_from_env_m2(env, 0.1)
plot(env, get_fitness_from_env_m2(env, 0.1),xlim=c(-4.5,8.5), ylim=c(0,2),
type="l", col=colfunc(10), lwd=2,
xlab="Environment", ylab="Fitness conferred by mutation")
#lines(env,get_fitness_from_env_m2_2(env,0.8), col="red")
abline(h=1)
env_b <- seq(-1,2,0.05)
env
env_b
env_b <- seq(-1,2,0.25)
env_b
env
length(env)
length(env_b)
env_b <- seq(-1,2,0.3)
length(env_b)
env_b <- seq(-1,2,0.2)
length(env_b)
env_b <- seq(-1,2,0.1)
env_b
env_b <- seq(-1,2,0.25)
env_b
require(OutFLANK)
require(vcfR)
require(adegenet)
require(gdm)
require(gradientForest)
require(foreach)
require(doParallel)
require(pbapply)
require(gdata)
require(data.table)
require(PresenceAbsence)
require(ROCR)
require(modEvA)
require(dplyr)
require(grid)
require(gridExtra)
require(gtools)
require(stringr)
require(reshape2)
setwd("/Users/akijarl/Desktop/PostDoc/TTT_Offset_Vulnerability_GF_Sims/")
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))]
#f1<-list.files()[grep(".txt",list.files())][11]
f1<-list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))][1]
#(seed<-substr(f1, start=12, stop=24))
(seed<-substr(f1, start=0, stop=13))
#g1<-substr(f1, start=25, stop=31)
#g1<-substr(f1, start=27, stop=33)
g1 <-"Gen600"
?pairwise.WCfst
??pairwise.WCfst
require(hierfstat)
??pairwise.WCfst
?pairwise.WCfst
env
f1
#fit<-read.table(paste("Fit_SP_100_",seed,".txt",sep=""),fill=T)
fit<-read.table(paste("SLiM_output/",f1,sep=""))
fit_nam <- NULL
for(i in 1:100){
fit_nam <- c(fit_nam,paste("P",i,"_fit",sep=""))
}
freq_nam <- NULL
for(i in 1:100){
freq_nam <- c(freq_nam,paste("P",i,"_freq",sep=""))
}
env_nam <- NULL
for(i in 1:100){
env_nam <- c(env_nam,paste("P",i,"_env",sep=""))
}
colnames(fit)<-c("m","n","u","r","Env_rate","Burnin","Env_shift", "Generation", fit_nam, freq_nam, env_nam)
N<-data.frame(fit$n[1]*100)
#N<-data.frame(sum(fit$n1[1],fit$n2[1],fit$n3[1],fit$n4[1],fit$n5[1],fit$n6[1],fit$n7[1],fit$n8[1],fit$n9[1],fit$n10[1])*10)
colnames(N)<-"N"
(specs<-data.frame(seed,fit[1,1:2],N,fit[1,3:7]))
plotTitle <- paste(colnames(specs)[1],":",specs[[1]],", ", colnames(specs)[2],":",specs[2],", ",colnames(specs)[3],":",specs[3],", ",colnames(specs)[4],":",specs[4],",",colnames(specs)[5],":",specs[5],", ",colnames(specs)[6],":",specs[6],", ",colnames(specs)[7],":",specs[7],", ",colnames(specs)[8],":",specs[8],sep="")
gen_nam <- paste("Gen",fit$Generation,sep="")
fitt<-data.frame(t(fit[,-1:-8]))
colnames(fitt)<-gen_nam
fitt$Location <- factor(rep(paste("A",seq(1,10,1),sep=""),30),levels = paste("A",seq(1,10,1),sep=""))
fitt$Type <- as.factor(c(rep("Fit",100),rep("Freq",100),rep("Env",100)))
View(fitt)
fitt$Gen301[fitt$Type=="Env",]
fitt$Gen301[fitt$Type=="Env"]
getwd()
write.table(fitt$Gen301[fitt$Type=="Env"], "T1_env.txt")
write.table(fitt$Gen301[fitt$Type=="Env"], "T1_env.txt",quote = F,row.names = F)
fitt$Gen601[fitt$Type=="Env"]
fitt$Gen1001[fitt$Type=="Env"]
fitt$Gen901[fitt$Type=="Env"]
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))]
#f1<-list.files()[grep(".txt",list.files())][11]
f1<-list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))][30]
#(seed<-substr(f1, start=12, stop=24))
(seed<-substr(f1, start=0, stop=13))
#g1<-substr(f1, start=25, stop=31)
#g1<-substr(f1, start=27, stop=33)
g1 <-"Gen600"
#fit<-read.table(paste("Fit_SP_100_",seed,".txt",sep=""),fill=T)
fit<-read.table(paste("SLiM_output/",f1,sep=""))
fit_nam <- NULL
for(i in 1:100){
fit_nam <- c(fit_nam,paste("P",i,"_fit",sep=""))
}
freq_nam <- NULL
for(i in 1:100){
freq_nam <- c(freq_nam,paste("P",i,"_freq",sep=""))
}
env_nam <- NULL
for(i in 1:100){
env_nam <- c(env_nam,paste("P",i,"_env",sep=""))
}
colnames(fit)<-c("m","n","u","r","Env_rate","Burnin","Env_shift", "Generation", fit_nam, freq_nam, env_nam)
N<-data.frame(fit$n[1]*100)
#N<-data.frame(sum(fit$n1[1],fit$n2[1],fit$n3[1],fit$n4[1],fit$n5[1],fit$n6[1],fit$n7[1],fit$n8[1],fit$n9[1],fit$n10[1])*10)
colnames(N)<-"N"
(specs<-data.frame(seed,fit[1,1:2],N,fit[1,3:7]))
plotTitle <- paste(colnames(specs)[1],":",specs[[1]],", ", colnames(specs)[2],":",specs[2],", ",colnames(specs)[3],":",specs[3],", ",colnames(specs)[4],":",specs[4],",",colnames(specs)[5],":",specs[5],", ",colnames(specs)[6],":",specs[6],", ",colnames(specs)[7],":",specs[7],", ",colnames(specs)[8],":",specs[8],sep="")
gen_nam <- paste("Gen",fit$Generation,sep="")
fitt<-data.frame(t(fit[,-1:-8]))
colnames(fitt)<-gen_nam
fitt$Location <- factor(rep(paste("A",seq(1,10,1),sep=""),30),levels = paste("A",seq(1,10,1),sep=""))
fitt$Type <- as.factor(c(rep("Fit",100),rep("Freq",100),rep("Env",100)))
vcf1 <- read.vcfR(paste("SLiM_output/VCF_files/T1_",seed,".vcf",sep=""))
fitt$Gen601[fitt$Type=="Env"]
fitt$Gen901[fitt$Type=="Env"]
View(fitt)
View(fit)
f1
fit<-read.table(paste("Fit_SP_100_",seed,".txt",sep=""),fill=T)
(seed<-substr(f1, start=12, stop=24))
fit<-read.table(paste("Fit_SP_100_",seed,".txt",sep=""),fill=T)
f1
setwd("/Users/akijarl/Desktop/PostDoc/TTT_Offset_Vulnerability_GF_Sims/")
fit<-read.table(paste("Fit_SP_100_",seed,".txt",sep=""),fill=T)
fit<-read.table(paste("SLiM_output/Fit_SP_100_",seed,".txt",sep=""),fill=T)
fit_nam <- NULL
for(i in 1:100){
fit_nam <- c(fit_nam,paste("P",i,"_fit",sep=""))
}
freq_nam <- NULL
for(i in 1:100){
freq_nam <- c(freq_nam,paste("P",i,"_freq",sep=""))
}
env_nam <- NULL
for(i in 1:100){
env_nam <- c(env_nam,paste("P",i,"_env",sep=""))
}
colnames(fit)<-c("m","n","u","r","Env_rate","Burnin","Env_shift", "Generation", fit_nam, freq_nam, env_nam)
N<-data.frame(fit$n[1]*100)
#N<-data.frame(sum(fit$n1[1],fit$n2[1],fit$n3[1],fit$n4[1],fit$n5[1],fit$n6[1],fit$n7[1],fit$n8[1],fit$n9[1],fit$n10[1])*10)
colnames(N)<-"N"
(specs<-data.frame(seed,fit[1,1:2],N,fit[1,3:7]))
plotTitle <- paste(colnames(specs)[1],":",specs[[1]],", ", colnames(specs)[2],":",specs[2],", ",colnames(specs)[3],":",specs[3],", ",colnames(specs)[4],":",specs[4],",",colnames(specs)[5],":",specs[5],", ",colnames(specs)[6],":",specs[6],", ",colnames(specs)[7],":",specs[7],", ",colnames(specs)[8],":",specs[8],sep="")
gen_nam <- paste("Gen",fit$Generation,sep="")
fitt<-data.frame(t(fit[,-1:-8]))
colnames(fitt)<-gen_nam
fitt$Location <- factor(rep(paste("A",seq(1,10,1),sep=""),30),levels = paste("A",seq(1,10,1),sep=""))
fitt$Type <- as.factor(c(rep("Fit",100),rep("Freq",100),rep("Env",100)))
vcf1 <- read.vcfR(paste("SLiM_output/VCF_files/T1_",seed,".vcf",sep=""))
View(fitt)
fit
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))]
View(fit)
View(fit)
f1 <- "Fit_SP_100_1600475934720.txt"
fit<-read.table(paste("SLiM_output/Fit_SP_100_",seed,".txt",sep=""),fill=T)
View(fit)
f1 <- "Fit_SP_100_1600491454415.txt"
fit<-read.table(paste("SLiM_output/Fit_SP_100_",seed,".txt",sep=""),fill=T)
(seed<-substr(f1, start=12, stop=24))
fit<-read.table(paste("SLiM_output/Fit_SP_100_",seed,".txt",sep=""),fill=T)
fit<-read.table(paste("SLiM_output/Fit_SP_100_",seed,".txt",sep=""),fill=T)
fit<-read.table(paste("SLiM_output/Fit_SP_100_1600494028258.txt")
)
fit<-read.table(paste("SLiM_output/Fit_SP_100_1600494028258.txt"))
View(fit)
f1 <- "Fit_SP_100_1722393789502.txt"
(seed<-substr(f1, start=12, stop=24))
fit<-read.table(paste("SLiM_output/Fit_SP_100_",seed,".txt",sep=""),fill=T)
View(fit)
colnames(fit)<-c("m","n","u","r","Env_rate","Burnin","Env_shift", "Generation", fit_nam, freq_nam, env_nam)
N<-data.frame(fit$n[1]*100)
#N<-data.frame(sum(fit$n1[1],fit$n2[1],fit$n3[1],fit$n4[1],fit$n5[1],fit$n6[1],fit$n7[1],fit$n8[1],fit$n9[1],fit$n10[1])*10)
colnames(N)<-"N"
(specs<-data.frame(seed,fit[1,1:2],N,fit[1,3:7]))
fitt<-data.frame(t(fit[,-1:-8]))
colnames(fitt)<-gen_nam
fitt$Location <- factor(rep(paste("A",seq(1,10,1),sep=""),30),levels = paste("A",seq(1,10,1),sep=""))
fitt$Type <- as.factor(c(rep("Fit",100),rep("Freq",100),rep("Env",100)))
vcf1 <- read.vcfR(paste("SLiM_output/VCF_files/T1_",seed,".vcf",sep=""))
View(fitt)
colnames(fitt)<-gen_nam
View(fitt)
gen_nam <- paste("Gen",fit$Generation,sep="")
colnames(fitt)<-gen_nam
View(fitt)
fitt$Gen601[fitt$Type=="Env"]
fitt$Location <- factor(rep(paste("A",seq(1,10,1),sep=""),30),levels = paste("A",seq(1,10,1),sep=""))
fitt$Type <- as.factor(c(rep("Fit",100),rep("Freq",100),rep("Env",100)))
fitt<-data.frame(t(fit[,-1:-8]))
colnames(fitt)<-gen_nam
fitt$Location <- factor(rep(paste("A",seq(1,10,1),sep=""),30),levels = paste("A",seq(1,10,1),sep=""))
fitt$Type <- as.factor(c(rep("Fit",100),rep("Freq",100),rep("Env",100)))
View(fitt)
fitt$Gen601[fitt$Type=="Env"]
write.table(fitt$Gen601[fitt$Type=="Env"],"T2_Env.txt",quote = F,row.names = F)
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))]
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))]
#f1<-list.files()[grep(".txt",list.files())][11]
f1<-list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))][23]
f1 <- "Fit_SP_100_1722393789502.txt"
(seed<-substr(f1, start=12, stop=24))
#g1<-substr(f1, start=25, stop=31)
#g1<-substr(f1, start=27, stop=33)
g1 <-"Gen600"
fit<-read.table(paste("SLiM_output/Fit_SP_100_",seed,".txt",sep=""),fill=T)
fit_nam <- NULL
for(i in 1:100){
fit_nam <- c(fit_nam,paste("P",i,"_fit",sep=""))
}
freq_nam <- NULL
f1
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))]
#f1<-list.files()[grep(".txt",list.files())][11]
f1<-list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))][23]
f1
fit<-read.table(paste("SLiM_output/",f1,sep=""))
fit_nam <- NULL
for(i in 1:100){
fit_nam <- c(fit_nam,paste("P",i,"_fit",sep=""))
}
freq_nam <- NULL
for(i in 1:100){
freq_nam <- c(freq_nam,paste("P",i,"_freq",sep=""))
}
env_nam <- NULL
for(i in 1:100){
env_nam <- c(env_nam,paste("P",i,"_env",sep=""))
}
colnames(fit)<-c("m","n","u","r","Env_rate","Burnin","Env_shift", "Generation", fit_nam, freq_nam, env_nam)
N<-data.frame(fit$n[1]*100)
#N<-data.frame(sum(fit$n1[1],fit$n2[1],fit$n3[1],fit$n4[1],fit$n5[1],fit$n6[1],fit$n7[1],fit$n8[1],fit$n9[1],fit$n10[1])*10)
colnames(N)<-"N"
(specs<-data.frame(seed,fit[1,1:2],N,fit[1,3:7]))
plotTitle <- paste(colnames(specs)[1],":",specs[[1]],", ", colnames(specs)[2],":",specs[2],", ",colnames(specs)[3],":",specs[3],", ",colnames(specs)[4],":",specs[4],",",colnames(specs)[5],":",specs[5],", ",colnames(specs)[6],":",specs[6],", ",colnames(specs)[7],":",specs[7],", ",colnames(specs)[8],":",specs[8],sep="")
gen_nam <- paste("Gen",fit$Generation,sep="")
fitt<-data.frame(t(fit[,-1:-8]))
colnames(fitt)<-gen_nam
fitt$Location <- factor(rep(paste("A",seq(1,10,1),sep=""),30),levels = paste("A",seq(1,10,1),sep=""))
fitt$Type <- as.factor(c(rep("Fit",100),rep("Freq",100),rep("Env",100)))
vcf1 <- read.vcfR(paste("SLiM_output/VCF_files/T1_",seed,".vcf",sep=""))
View(fit)
rm(ls=list())
rm(list=ls())
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))][11]
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))][23]
#f1<-list.files()[grep(".txt",list.files())][11]
f1<-list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))][23]
(seed<-substr(f1, start=12, stop=24))
#(seed<-substr(f1, start=12, stop=24))
(seed<-substr(f1, start=0, stop=13))
#g1<-substr(f1, start=25, stop=31)
#g1<-substr(f1, start=27, stop=33)
g1 <-"Gen600"
fit<-read.table(paste("SLiM_output/",f1,sep=""))
fit_nam <- NULL
for(i in 1:100){
fit_nam <- c(fit_nam,paste("P",i,"_fit",sep=""))
}
freq_nam <- NULL
for(i in 1:100){
freq_nam <- c(freq_nam,paste("P",i,"_freq",sep=""))
}
env_nam <- NULL
for(i in 1:100){
env_nam <- c(env_nam,paste("P",i,"_env",sep=""))
}
colnames(fit)<-c("m","n","u","r","Env_rate","Burnin","Env_shift", "Generation", fit_nam, freq_nam, env_nam)
N<-data.frame(fit$n[1]*100)
#N<-data.frame(sum(fit$n1[1],fit$n2[1],fit$n3[1],fit$n4[1],fit$n5[1],fit$n6[1],fit$n7[1],fit$n8[1],fit$n9[1],fit$n10[1])*10)
colnames(N)<-"N"
(specs<-data.frame(seed,fit[1,1:2],N,fit[1,3:7]))
plotTitle <- paste(colnames(specs)[1],":",specs[[1]],", ", colnames(specs)[2],":",specs[2],", ",colnames(specs)[3],":",specs[3],", ",colnames(specs)[4],":",specs[4],",",colnames(specs)[5],":",specs[5],", ",colnames(specs)[6],":",specs[6],", ",colnames(specs)[7],":",specs[7],", ",colnames(specs)[8],":",specs[8],sep="")
gen_nam <- paste("Gen",fit$Generation,sep="")
fitt<-data.frame(t(fit[,-1:-8]))
colnames(fitt)<-gen_nam
fitt$Location <- factor(rep(paste("A",seq(1,10,1),sep=""),30),levels = paste("A",seq(1,10,1),sep=""))
fitt$Type <- as.factor(c(rep("Fit",100),rep("Freq",100),rep("Env",100)))
require(ggplot2)
require(cowplot)
require(qqman)
require(RColorBrewer)
colfunc<-colorRampPalette(c("orange","cyan"))
#plot(c(1:10),rep(1,10),col=colfunc(10),pch=19,cex=5) #Get color gradients for matrix image
#fit[1,210:309]<-fit[2,210:309]
plot(fit$Gen,fit$P19_env,type="l", main=plotTitle, xlab="Generations",ylab="Environmental variable",col="white",ylim=c(-5,10))
k=1
for(i in 209:308){
lines(fit$Gen,fit[,i],lwd=2,col=colfunc(10)[k])
k=k+1
}
View(fit)
#par(fig = c(0,1,0,1))
plot(fit$Gen,fit$P19_fit,type="l",main=plotTitle ,xlab="Generations",ylab="Relative Fitness",col="red",ylim=c(min(fit[,c(9:108)]),max(fit[,c(9:108)])))
x=1:10
y=1:10
for(i in x){
for(j in y){
k=((i - 1) + (j - 1) * 10 + 9)
print(k)
lines(fit$Gen,fit[,k],col=colfunc(10)[i])
}
}
lines(fit$Gen,fit$P19_fit, col="red")
#par(fig = c(0,1,0,1))
plot(fit$Gen,fit$P19_freq,type="l", main=plotTitle, xlab="Generations",ylab="Mutant allele frequency",col="red",ylim=c(0,1))
x=1:10
y=1:10
for(i in x){
for(j in y){
k=((i - 1) + (j - 1) * 10 + 109)
lines(fit$Gen,fit[,k],col=colfunc(10)[i])
}
}
lines(fit$Gen,fit$P19_freq, col="red")
ggplot()+
geom_boxplot(aes(x=fitt[fitt$Type=="Env",]$Location,y=fitt[fitt$Type=="Freq",]$Gen301,col=fitt[fitt$Type=="Freq",]$Location))+
scale_colour_manual(values = colfunc(10))+
xlab("Environment type")+
ylab("Allele frequency of allele under selection")+
theme_classic()+
theme(legend.position = "none")
ggplot()+
geom_boxplot(aes(x=fitt[fitt$Type=="Env",]$Location,y=fitt[fitt$Type=="Freq",]$Gen601,col=fitt[fitt$Type=="Freq",]$Location))+
scale_colour_manual(values = colfunc(10))+
xlab("Environment type")+
ylab("Allele frequency of allele under selection")+
theme_classic()+
theme(legend.position = "none")
ggplot()+
geom_boxplot(aes(x=fitt[fitt$Type=="Env",]$Location,y=Pop_afreq1$M224999,col=fitt[fitt$Type=="Freq",]$Location))+
scale_colour_manual(values = colfunc(10))+
xlab("Environment type")+
ylab("Allele frequency of allele under selection")+
theme_classic()+
theme(legend.position = "none")
ggplot()+
geom_boxplot(aes(x=fitt[fitt$Type=="Env",]$Location,y=Pop_afreq2$M224999,col=fitt[fitt$Type=="Freq",]$Location))+
scale_colour_manual(values = colfunc(10))+
xlab("Environment type")+
ylab("Allele frequency of allele under selection")+
theme_classic()+
theme(legend.position = "none")
fitt[fitt$Type=="Freq",]$Gen301 - Pop_afreq1$M224999
fitt[fitt$Type=="Freq",]$Gen601 - Pop_afreq2$M224999
ggplot()+
geom_boxplot(aes(x=fitt[fitt$Type=="Env",]$Location,y=fitt[fitt$Type=="Freq",]$Gen1001,col=fitt[fitt$Type=="Freq",]$Location))+
scale_colour_manual(values = colfunc(10))+
xlab("Environment type")+
ylab("Allele frequency of allele under selection")+
theme_classic()+
theme(legend.position = "none")
list.files("SLiM_output")[grep(".txt",list.files("SLiM_output"))]
plot(c(10,10,40,40,40,100,160,160,220,220))
plot(c(10,10,50,50,95,95,145,145,200,200))
plot(c(10,10,40,40,40,100,160,160,220,220), type="l")
plot(c(10,10,50,50,95,95,145,145,200,200),type="l")
par(mfrow=c(2,1))
plot(c(10,10,40,40,40,100,160,160,220,220), type="l", xlab="x location", ylab="deme size")
plot(c(10,10,50,50,95,95,145,145,200,200), type="l", xlab="x location", ylab="deme size",ylim=c(50,220)))
plot(c(10,10,50,50,95,95,145,145,200,200), type="l", xlab="x location", ylab="deme size",ylim=c(50,220))
par(mfrow=c(2,1))
plot(c(10,10,40,40,40,100,160,160,220,220), type="l", xlab="x location", ylab="deme size",,ylim=c(10,220))
plot(c(10,10,50,50,95,95,145,145,200,200), type="l", xlab="x location", ylab="deme size",ylim=c(10,220)))
plot(c(10,10,50,50,95,95,145,145,200,200), type="l", xlab="x location", ylab="deme size",ylim=c(10,220))
par(mfrow=c(2,1))
?plot
?plot()
plot(c(10,10,50,50,95,95,145,145,200,200), type="l", xlab="x location", ylab="deme size",ylim=c(10,220),main="Scenario 1")
plot(c(10,10,40,40,40,100,160,160,220,220), type="l", xlab="x location", ylab="deme size",,ylim=c(10,220),main="Scenario 2")
